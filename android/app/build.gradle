def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterRoot = localProperties.getProperty('flutter.sdk')
if (flutterRoot == null) {
    throw new GradleException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '20'
}
flutterVersionCode = '20'

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '20.0'
}
flutterVersionName = '20.0'

def keystoreProperties = new Properties()
   def keystorePropertiesFile = rootProject.file('key.properties')
   if (keystorePropertiesFile.exists()) {
       keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
   }

apply plugin: 'com.android.application'
apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"

android {
    compileSdkVersion 34

    lintOptions {
        disable 'InvalidPackage'
        checkReleaseBuilds false
    }

    defaultConfig {
        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
        applicationId "com.breadoflife.ministries"
        minSdkVersion 23
        targetSdkVersion 34
        ndkVersion = "23.1.7779620"
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
    }

//     signingConfigs {
//       release {
//           keyAlias keystoreProperties['keyAlias']
//           keyPassword keystoreProperties['keyPassword']
//           storeFile keystoreProperties['storeFile'] ? file(keystoreProperties['storeFile']) : null
//           storePassword keystoreProperties['storePassword']
//       }
//     }

    signingConfigs {
//        release {
//            keyAlias 'BreadOfLife'
//            keyPassword 'ya1j6D6#'
//            storeFile file('D:\\Project\\breadoflifeministires\\KEY\\key.jks')
//            storePassword 'ya1j6D6#'
//        }
    }

    buildTypes {
        release {
            // TODO: Add your own signing config for the release build.
            // Signing with the debug keys for now, so `flutter run --release` works.
            shrinkResources false
            minifyEnabled false
//            signingConfig signingConfigs.release
            debuggable false
            jniDebuggable false
            renderscriptDebuggable false
            pseudoLocalesEnabled false
            zipAlignEnabled true
        }
    }
}

dependencies {
    // add the Firebase SDK for Google Analytics
    implementation 'com.stripe:stripe-android:20.15.2'
    implementation 'com.google.firebase:firebase-messaging:23.1.0'
    implementation 'com.google.firebase:firebase-analytics:18.3.0'
    implementation 'com.google.guava:listenablefuture:9999.0-empty-to-avoid-conflict-with-guava'
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    testImplementation 'junit:junit:4.13'
    androidTestImplementation 'androidx.test:runner:1.2.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
// add SDKs for any other desired Firebase products
// https://firebase.google.com/docs/android/setup#available-libraries
}

flutter {

    source '../..'
}
apply plugin: 'com.google.gms.google-services'
